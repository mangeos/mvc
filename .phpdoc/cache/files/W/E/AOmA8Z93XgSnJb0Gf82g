1682619022
waR3U4bTeM%3Ac51e085c3d0b9619c61e120c7cbb6144-bc0d912b9b59fa7e38b768c86b8d729a
s:36292:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"bc0d912b9b59fa7e38b768c86b8d729a";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"lb.php";s:39:" phpDocumentor\Reflection\Php\File path";s:49:"vendor/symfony/intl/Resources/data/locales/lb.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26296:"<?php

return [
    'Names' => [
        'af' => 'Afrikaans',
        'af_NA' => 'Afrikaans (Namibia)',
        'af_ZA' => 'Afrikaans (Südafrika)',
        'ak' => 'Akan',
        'ak_GH' => 'Akan (Ghana)',
        'am' => 'Amharesch',
        'am_ET' => 'Amharesch (Ethiopien)',
        'ar' => 'Arabesch',
        'ar_001' => 'Arabesch (Welt)',
        'ar_AE' => 'Arabesch (Vereenegt Arabesch Emirater)',
        'ar_BH' => 'Arabesch (Bahrain)',
        'ar_DJ' => 'Arabesch (Dschibuti)',
        'ar_DZ' => 'Arabesch (Algerien)',
        'ar_EG' => 'Arabesch (Egypten)',
        'ar_EH' => 'Arabesch (Westsahara)',
        'ar_ER' => 'Arabesch (Eritrea)',
        'ar_IL' => 'Arabesch (Israel)',
        'ar_IQ' => 'Arabesch (Irak)',
        'ar_JO' => 'Arabesch (Jordanien)',
        'ar_KM' => 'Arabesch (Komoren)',
        'ar_KW' => 'Arabesch (Kuwait)',
        'ar_LB' => 'Arabesch (Libanon)',
        'ar_LY' => 'Arabesch (Libyen)',
        'ar_MA' => 'Arabesch (Marokko)',
        'ar_MR' => 'Arabesch (Mauretanien)',
        'ar_OM' => 'Arabesch (Oman)',
        'ar_PS' => 'Arabesch (Palestinensesch Autonomiegebidder)',
        'ar_QA' => 'Arabesch (Katar)',
        'ar_SA' => 'Arabesch (Saudi-Arabien)',
        'ar_SD' => 'Arabesch (Sudan)',
        'ar_SO' => 'Arabesch (Somalia)',
        'ar_SS' => 'Arabesch (Südsudan)',
        'ar_SY' => 'Arabesch (Syrien)',
        'ar_TD' => 'Arabesch (Tschad)',
        'ar_TN' => 'Arabesch (Tunesien)',
        'ar_YE' => 'Arabesch (Jemen)',
        'as' => 'Assamesesch',
        'as_IN' => 'Assamesesch (Indien)',
        'az' => 'Aserbaidschanesch',
        'az_AZ' => 'Aserbaidschanesch (Aserbaidschan)',
        'az_Cyrl' => 'Aserbaidschanesch (Kyrillesch)',
        'az_Cyrl_AZ' => 'Aserbaidschanesch (Kyrillesch, Aserbaidschan)',
        'az_Latn' => 'Aserbaidschanesch (Laténgesch)',
        'az_Latn_AZ' => 'Aserbaidschanesch (Laténgesch, Aserbaidschan)',
        'be' => 'Wäissrussesch',
        'be_BY' => 'Wäissrussesch (Wäissrussland)',
        'bg' => 'Bulgaresch',
        'bg_BG' => 'Bulgaresch (Bulgarien)',
        'bm' => 'Bambara-Sprooch',
        'bm_ML' => 'Bambara-Sprooch (Mali)',
        'bn' => 'Bengalesch',
        'bn_BD' => 'Bengalesch (Bangladesch)',
        'bn_IN' => 'Bengalesch (Indien)',
        'bo' => 'Tibetesch',
        'bo_CN' => 'Tibetesch (China)',
        'bo_IN' => 'Tibetesch (Indien)',
        'br' => 'Bretonesch',
        'br_FR' => 'Bretonesch (Frankräich)',
        'bs' => 'Bosnesch',
        'bs_BA' => 'Bosnesch (Bosnien an Herzegowina)',
        'bs_Cyrl' => 'Bosnesch (Kyrillesch)',
        'bs_Cyrl_BA' => 'Bosnesch (Kyrillesch, Bosnien an Herzegowina)',
        'bs_Latn' => 'Bosnesch (Laténgesch)',
        'bs_Latn_BA' => 'Bosnesch (Laténgesch, Bosnien an Herzegowina)',
        'ca' => 'Katalanesch',
        'ca_AD' => 'Katalanesch (Andorra)',
        'ca_ES' => 'Katalanesch (Spanien)',
        'ca_FR' => 'Katalanesch (Frankräich)',
        'ca_IT' => 'Katalanesch (Italien)',
        'ce' => 'Tschetschenesch',
        'ce_RU' => 'Tschetschenesch (Russland)',
        'cs' => 'Tschechesch',
        'cs_CZ' => 'Tschechesch (Tschechien)',
        'cy' => 'Walisesch',
        'cy_GB' => 'Walisesch (Groussbritannien)',
        'da' => 'Dänesch',
        'da_DK' => 'Dänesch (Dänemark)',
        'da_GL' => 'Dänesch (Grönland)',
        'de' => 'Däitsch',
        'de_AT' => 'Däitsch (Éisträich)',
        'de_BE' => 'Däitsch (Belsch)',
        'de_CH' => 'Däitsch (Schwäiz)',
        'de_DE' => 'Däitsch (Däitschland)',
        'de_IT' => 'Däitsch (Italien)',
        'de_LI' => 'Däitsch (Liechtenstein)',
        'de_LU' => 'Däitsch (Lëtzebuerg)',
        'dz' => 'Bhutanesch',
        'dz_BT' => 'Bhutanesch (Bhutan)',
        'ee' => 'Ewe-Sprooch',
        'ee_GH' => 'Ewe-Sprooch (Ghana)',
        'ee_TG' => 'Ewe-Sprooch (Togo)',
        'el' => 'Griichesch',
        'el_CY' => 'Griichesch (Zypern)',
        'el_GR' => 'Griichesch (Griicheland)',
        'en' => 'Englesch',
        'en_001' => 'Englesch (Welt)',
        'en_150' => 'Englesch (Europa)',
        'en_AE' => 'Englesch (Vereenegt Arabesch Emirater)',
        'en_AG' => 'Englesch (Antigua a Barbuda)',
        'en_AI' => 'Englesch (Anguilla)',
        'en_AS' => 'Englesch (Amerikanesch-Samoa)',
        'en_AT' => 'Englesch (Éisträich)',
        'en_AU' => 'Englesch (Australien)',
        'en_BB' => 'Englesch (Barbados)',
        'en_BE' => 'Englesch (Belsch)',
        'en_BI' => 'Englesch (Burundi)',
        'en_BM' => 'Englesch (Bermuda)',
        'en_BS' => 'Englesch (Bahamas)',
        'en_BW' => 'Englesch (Botsuana)',
        'en_BZ' => 'Englesch (Belize)',
        'en_CA' => 'Englesch (Kanada)',
        'en_CC' => 'Englesch (Kokosinselen)',
        'en_CH' => 'Englesch (Schwäiz)',
        'en_CK' => 'Englesch (Cookinselen)',
        'en_CM' => 'Englesch (Kamerun)',
        'en_CX' => 'Englesch (Chrëschtdagsinsel)',
        'en_CY' => 'Englesch (Zypern)',
        'en_DE' => 'Englesch (Däitschland)',
        'en_DK' => 'Englesch (Dänemark)',
        'en_DM' => 'Englesch (Dominica)',
        'en_ER' => 'Englesch (Eritrea)',
        'en_FI' => 'Englesch (Finnland)',
        'en_FJ' => 'Englesch (Fidschi)',
        'en_FK' => 'Englesch (Falklandinselen)',
        'en_FM' => 'Englesch (Mikronesien)',
        'en_GB' => 'Englesch (Groussbritannien)',
        'en_GD' => 'Englesch (Grenada)',
        'en_GG' => 'Englesch (Guernsey)',
        'en_GH' => 'Englesch (Ghana)',
        'en_GI' => 'Englesch (Gibraltar)',
        'en_GM' => 'Englesch (Gambia)',
        'en_GU' => 'Englesch (Guam)',
        'en_GY' => 'Englesch (Guyana)',
        'en_HK' => 'Englesch (Spezialverwaltungszon Hong Kong)',
        'en_IE' => 'Englesch (Irland)',
        'en_IL' => 'Englesch (Israel)',
        'en_IM' => 'Englesch (Isle of Man)',
        'en_IN' => 'Englesch (Indien)',
        'en_IO' => 'Englesch (Britescht Territorium am Indeschen Ozean)',
        'en_JE' => 'Englesch (Jersey)',
        'en_JM' => 'Englesch (Jamaika)',
        'en_KE' => 'Englesch (Kenia)',
        'en_KI' => 'Englesch (Kiribati)',
        'en_KN' => 'Englesch (St. Kitts an Nevis)',
        'en_KY' => 'Englesch (Kaimaninselen)',
        'en_LC' => 'Englesch (St. Lucia)',
        'en_LR' => 'Englesch (Liberia)',
        'en_LS' => 'Englesch (Lesotho)',
        'en_MG' => 'Englesch (Madagaskar)',
        'en_MH' => 'Englesch (Marshallinselen)',
        'en_MO' => 'Englesch (Spezialverwaltungszon Macau)',
        'en_MP' => 'Englesch (Nërdlech Marianen)',
        'en_MS' => 'Englesch (Montserrat)',
        'en_MT' => 'Englesch (Malta)',
        'en_MU' => 'Englesch (Mauritius)',
        'en_MW' => 'Englesch (Malawi)',
        'en_MY' => 'Englesch (Malaysia)',
        'en_NA' => 'Englesch (Namibia)',
        'en_NF' => 'Englesch (Norfolkinsel)',
        'en_NG' => 'Englesch (Nigeria)',
        'en_NL' => 'Englesch (Holland)',
        'en_NR' => 'Englesch (Nauru)',
        'en_NU' => 'Englesch (Niue)',
        'en_NZ' => 'Englesch (Neiséiland)',
        'en_PG' => 'Englesch (Papua-Neiguinea)',
        'en_PH' => 'Englesch (Philippinnen)',
        'en_PK' => 'Englesch (Pakistan)',
        'en_PN' => 'Englesch (Pitcairninselen)',
        'en_PR' => 'Englesch (Puerto Rico)',
        'en_PW' => 'Englesch (Palau)',
        'en_RW' => 'Englesch (Ruanda)',
        'en_SB' => 'Englesch (Salomonen)',
        'en_SC' => 'Englesch (Seychellen)',
        'en_SD' => 'Englesch (Sudan)',
        'en_SE' => 'Englesch (Schweden)',
        'en_SG' => 'Englesch (Singapur)',
        'en_SH' => 'Englesch (St. Helena)',
        'en_SI' => 'Englesch (Slowenien)',
        'en_SL' => 'Englesch (Sierra Leone)',
        'en_SS' => 'Englesch (Südsudan)',
        'en_SX' => 'Englesch (Sint Maarten)',
        'en_SZ' => 'Englesch (Swasiland)',
        'en_TC' => 'Englesch (Turks- a Caicosinselen)',
        'en_TK' => 'Englesch (Tokelau)',
        'en_TO' => 'Englesch (Tonga)',
        'en_TT' => 'Englesch (Trinidad an Tobago)',
        'en_TV' => 'Englesch (Tuvalu)',
        'en_TZ' => 'Englesch (Tansania)',
        'en_UG' => 'Englesch (Uganda)',
        'en_UM' => 'Englesch (Amerikanesch-Ozeanien)',
        'en_US' => 'Englesch (Vereenegt Staaten)',
        'en_VC' => 'Englesch (St. Vincent an d’Grenadinnen)',
        'en_VG' => 'Englesch (Britesch Joffereninselen)',
        'en_VI' => 'Englesch (Amerikanesch Joffereninselen)',
        'en_VU' => 'Englesch (Vanuatu)',
        'en_WS' => 'Englesch (Samoa)',
        'en_ZA' => 'Englesch (Südafrika)',
        'en_ZM' => 'Englesch (Sambia)',
        'en_ZW' => 'Englesch (Simbabwe)',
        'eo' => 'Esperanto',
        'eo_001' => 'Esperanto (Welt)',
        'es' => 'Spuenesch',
        'es_419' => 'Spuenesch (Latäinamerika)',
        'es_AR' => 'Spuenesch (Argentinien)',
        'es_BO' => 'Spuenesch (Bolivien)',
        'es_BR' => 'Spuenesch (Brasilien)',
        'es_BZ' => 'Spuenesch (Belize)',
        'es_CL' => 'Spuenesch (Chile)',
        'es_CO' => 'Spuenesch (Kolumbien)',
        'es_CR' => 'Spuenesch (Costa Rica)',
        'es_CU' => 'Spuenesch (Kuba)',
        'es_DO' => 'Spuenesch (Dominikanesch Republik)',
        'es_EC' => 'Spuenesch (Ecuador)',
        'es_ES' => 'Spuenesch (Spanien)',
        'es_GQ' => 'Spuenesch (Equatorialguinea)',
        'es_GT' => 'Spuenesch (Guatemala)',
        'es_HN' => 'Spuenesch (Honduras)',
        'es_MX' => 'Spuenesch (Mexiko)',
        'es_NI' => 'Spuenesch (Nicaragua)',
        'es_PA' => 'Spuenesch (Panama)',
        'es_PE' => 'Spuenesch (Peru)',
        'es_PH' => 'Spuenesch (Philippinnen)',
        'es_PR' => 'Spuenesch (Puerto Rico)',
        'es_PY' => 'Spuenesch (Paraguay)',
        'es_SV' => 'Spuenesch (El Salvador)',
        'es_US' => 'Spuenesch (Vereenegt Staaten)',
        'es_UY' => 'Spuenesch (Uruguay)',
        'es_VE' => 'Spuenesch (Venezuela)',
        'et' => 'Estnesch',
        'et_EE' => 'Estnesch (Estland)',
        'eu' => 'Baskesch',
        'eu_ES' => 'Baskesch (Spanien)',
        'fa' => 'Persesch',
        'fa_AF' => 'Persesch (Afghanistan)',
        'fa_IR' => 'Persesch (Iran)',
        'ff' => 'Ful',
        'ff_CM' => 'Ful (Kamerun)',
        'ff_GN' => 'Ful (Guinea)',
        'ff_Latn' => 'Ful (Laténgesch)',
        'ff_Latn_BF' => 'Ful (Laténgesch, Burkina Faso)',
        'ff_Latn_CM' => 'Ful (Laténgesch, Kamerun)',
        'ff_Latn_GH' => 'Ful (Laténgesch, Ghana)',
        'ff_Latn_GM' => 'Ful (Laténgesch, Gambia)',
        'ff_Latn_GN' => 'Ful (Laténgesch, Guinea)',
        'ff_Latn_GW' => 'Ful (Laténgesch, Guinea-Bissau)',
        'ff_Latn_LR' => 'Ful (Laténgesch, Liberia)',
        'ff_Latn_MR' => 'Ful (Laténgesch, Mauretanien)',
        'ff_Latn_NE' => 'Ful (Laténgesch, Niger)',
        'ff_Latn_NG' => 'Ful (Laténgesch, Nigeria)',
        'ff_Latn_SL' => 'Ful (Laténgesch, Sierra Leone)',
        'ff_Latn_SN' => 'Ful (Laténgesch, Senegal)',
        'ff_MR' => 'Ful (Mauretanien)',
        'ff_SN' => 'Ful (Senegal)',
        'fi' => 'Finnesch',
        'fi_FI' => 'Finnesch (Finnland)',
        'fo' => 'Färöesch',
        'fo_DK' => 'Färöesch (Dänemark)',
        'fo_FO' => 'Färöesch (Färöer)',
        'fr' => 'Franséisch',
        'fr_BE' => 'Franséisch (Belsch)',
        'fr_BF' => 'Franséisch (Burkina Faso)',
        'fr_BI' => 'Franséisch (Burundi)',
        'fr_BJ' => 'Franséisch (Benin)',
        'fr_BL' => 'Franséisch (Saint-Barthélemy)',
        'fr_CA' => 'Franséisch (Kanada)',
        'fr_CD' => 'Franséisch (Kongo-Kinshasa)',
        'fr_CF' => 'Franséisch (Zentralafrikanesch Republik)',
        'fr_CG' => 'Franséisch (Kongo-Brazzaville)',
        'fr_CH' => 'Franséisch (Schwäiz)',
        'fr_CI' => 'Franséisch (Côte d’Ivoire)',
        'fr_CM' => 'Franséisch (Kamerun)',
        'fr_DJ' => 'Franséisch (Dschibuti)',
        'fr_DZ' => 'Franséisch (Algerien)',
        'fr_FR' => 'Franséisch (Frankräich)',
        'fr_GA' => 'Franséisch (Gabun)',
        'fr_GF' => 'Franséisch (Guayane)',
        'fr_GN' => 'Franséisch (Guinea)',
        'fr_GP' => 'Franséisch (Guadeloupe)',
        'fr_GQ' => 'Franséisch (Equatorialguinea)',
        'fr_HT' => 'Franséisch (Haiti)',
        'fr_KM' => 'Franséisch (Komoren)',
        'fr_LU' => 'Franséisch (Lëtzebuerg)',
        'fr_MA' => 'Franséisch (Marokko)',
        'fr_MC' => 'Franséisch (Monaco)',
        'fr_MF' => 'Franséisch (St. Martin)',
        'fr_MG' => 'Franséisch (Madagaskar)',
        'fr_ML' => 'Franséisch (Mali)',
        'fr_MQ' => 'Franséisch (Martinique)',
        'fr_MR' => 'Franséisch (Mauretanien)',
        'fr_MU' => 'Franséisch (Mauritius)',
        'fr_NC' => 'Franséisch (Neikaledonien)',
        'fr_NE' => 'Franséisch (Niger)',
        'fr_PF' => 'Franséisch (Franséisch-Polynesien)',
        'fr_PM' => 'Franséisch (St. Pierre a Miquelon)',
        'fr_RE' => 'Franséisch (Réunion)',
        'fr_RW' => 'Franséisch (Ruanda)',
        'fr_SC' => 'Franséisch (Seychellen)',
        'fr_SN' => 'Franséisch (Senegal)',
        'fr_SY' => 'Franséisch (Syrien)',
        'fr_TD' => 'Franséisch (Tschad)',
        'fr_TG' => 'Franséisch (Togo)',
        'fr_TN' => 'Franséisch (Tunesien)',
        'fr_VU' => 'Franséisch (Vanuatu)',
        'fr_WF' => 'Franséisch (Wallis a Futuna)',
        'fr_YT' => 'Franséisch (Mayotte)',
        'fy' => 'Westfriesesch',
        'fy_NL' => 'Westfriesesch (Holland)',
        'ga' => 'Iresch',
        'ga_GB' => 'Iresch (Groussbritannien)',
        'ga_IE' => 'Iresch (Irland)',
        'gd' => 'Schottescht Gällesch',
        'gd_GB' => 'Schottescht Gällesch (Groussbritannien)',
        'gl' => 'Galizesch',
        'gl_ES' => 'Galizesch (Spanien)',
        'gu' => 'Gujarati',
        'gu_IN' => 'Gujarati (Indien)',
        'gv' => 'Manx',
        'gv_IM' => 'Manx (Isle of Man)',
        'ha' => 'Hausa',
        'ha_GH' => 'Hausa (Ghana)',
        'ha_NE' => 'Hausa (Niger)',
        'ha_NG' => 'Hausa (Nigeria)',
        'he' => 'Hebräesch',
        'he_IL' => 'Hebräesch (Israel)',
        'hi' => 'Hindi',
        'hi_IN' => 'Hindi (Indien)',
        'hr' => 'Kroatesch',
        'hr_BA' => 'Kroatesch (Bosnien an Herzegowina)',
        'hr_HR' => 'Kroatesch (Kroatien)',
        'hu' => 'Ungaresch',
        'hu_HU' => 'Ungaresch (Ungarn)',
        'hy' => 'Armenesch',
        'hy_AM' => 'Armenesch (Armenien)',
        'ia' => 'Interlingua',
        'ia_001' => 'Interlingua (Welt)',
        'id' => 'Indonesesch',
        'id_ID' => 'Indonesesch (Indonesien)',
        'ig' => 'Igbo-Sprooch',
        'ig_NG' => 'Igbo-Sprooch (Nigeria)',
        'ii' => 'Sichuan Yi',
        'ii_CN' => 'Sichuan Yi (China)',
        'is' => 'Islännesch',
        'is_IS' => 'Islännesch (Island)',
        'it' => 'Italienesch',
        'it_CH' => 'Italienesch (Schwäiz)',
        'it_IT' => 'Italienesch (Italien)',
        'it_SM' => 'Italienesch (San Marino)',
        'it_VA' => 'Italienesch (Vatikanstad)',
        'ja' => 'Japanesch',
        'ja_JP' => 'Japanesch (Japan)',
        'jv' => 'Javanesch',
        'jv_ID' => 'Javanesch (Indonesien)',
        'ka' => 'Georgesch',
        'ka_GE' => 'Georgesch (Georgien)',
        'ki' => 'Kikuyu-Sprooch',
        'ki_KE' => 'Kikuyu-Sprooch (Kenia)',
        'kk' => 'Kasachesch',
        'kk_KZ' => 'Kasachesch (Kasachstan)',
        'kl' => 'Grönlännesch',
        'kl_GL' => 'Grönlännesch (Grönland)',
        'km' => 'Kambodschanesch',
        'km_KH' => 'Kambodschanesch (Kambodscha)',
        'kn' => 'Kannada',
        'kn_IN' => 'Kannada (Indien)',
        'ko' => 'Koreanesch',
        'ko_KP' => 'Koreanesch (Nordkorea)',
        'ko_KR' => 'Koreanesch (Südkorea)',
        'ks' => 'Kaschmiresch',
        'ks_Arab' => 'Kaschmiresch (Arabesch)',
        'ks_Arab_IN' => 'Kaschmiresch (Arabesch, Indien)',
        'ks_IN' => 'Kaschmiresch (Indien)',
        'ku' => 'Kurdesch',
        'ku_TR' => 'Kurdesch (Tierkei)',
        'kw' => 'Kornesch',
        'kw_GB' => 'Kornesch (Groussbritannien)',
        'ky' => 'Kirgisesch',
        'ky_KG' => 'Kirgisesch (Kirgisistan)',
        'lb' => 'Lëtzebuergesch',
        'lb_LU' => 'Lëtzebuergesch (Lëtzebuerg)',
        'lg' => 'Ganda-Sprooch',
        'lg_UG' => 'Ganda-Sprooch (Uganda)',
        'ln' => 'Lingala',
        'ln_AO' => 'Lingala (Angola)',
        'ln_CD' => 'Lingala (Kongo-Kinshasa)',
        'ln_CF' => 'Lingala (Zentralafrikanesch Republik)',
        'ln_CG' => 'Lingala (Kongo-Brazzaville)',
        'lo' => 'Laotesch',
        'lo_LA' => 'Laotesch (Laos)',
        'lt' => 'Litauesch',
        'lt_LT' => 'Litauesch (Litauen)',
        'lu' => 'Luba-Katanga',
        'lu_CD' => 'Luba-Katanga (Kongo-Kinshasa)',
        'lv' => 'Lettesch',
        'lv_LV' => 'Lettesch (Lettland)',
        'mg' => 'Malagassi-Sprooch',
        'mg_MG' => 'Malagassi-Sprooch (Madagaskar)',
        'mi' => 'Maori',
        'mi_NZ' => 'Maori (Neiséiland)',
        'mk' => 'Mazedonesch',
        'mk_MK' => 'Mazedonesch (Nordmazedonien)',
        'ml' => 'Malayalam',
        'ml_IN' => 'Malayalam (Indien)',
        'mn' => 'Mongolesch',
        'mn_MN' => 'Mongolesch (Mongolei)',
        'mr' => 'Marathi',
        'mr_IN' => 'Marathi (Indien)',
        'ms' => 'Malaiesch',
        'ms_BN' => 'Malaiesch (Brunei)',
        'ms_ID' => 'Malaiesch (Indonesien)',
        'ms_MY' => 'Malaiesch (Malaysia)',
        'ms_SG' => 'Malaiesch (Singapur)',
        'mt' => 'Maltesesch',
        'mt_MT' => 'Maltesesch (Malta)',
        'my' => 'Birmanesch',
        'my_MM' => 'Birmanesch (Myanmar)',
        'nb' => 'Norwegesch Bokmål',
        'nb_NO' => 'Norwegesch Bokmål (Norwegen)',
        'nb_SJ' => 'Norwegesch Bokmål (Svalbard a Jan Mayen)',
        'nd' => 'Nord-Ndebele-Sprooch',
        'nd_ZW' => 'Nord-Ndebele-Sprooch (Simbabwe)',
        'ne' => 'Nepalesesch',
        'ne_IN' => 'Nepalesesch (Indien)',
        'ne_NP' => 'Nepalesesch (Nepal)',
        'nl' => 'Hollännesch',
        'nl_AW' => 'Hollännesch (Aruba)',
        'nl_BE' => 'Hollännesch (Belsch)',
        'nl_BQ' => 'Hollännesch (Karibescht Holland)',
        'nl_CW' => 'Hollännesch (Curaçao)',
        'nl_NL' => 'Hollännesch (Holland)',
        'nl_SR' => 'Hollännesch (Suriname)',
        'nl_SX' => 'Hollännesch (Sint Maarten)',
        'nn' => 'Norwegesch Nynorsk',
        'nn_NO' => 'Norwegesch Nynorsk (Norwegen)',
        'no' => 'Norwegesch',
        'no_NO' => 'Norwegesch (Norwegen)',
        'om' => 'Oromo',
        'om_ET' => 'Oromo (Ethiopien)',
        'om_KE' => 'Oromo (Kenia)',
        'or' => 'Orija',
        'or_IN' => 'Orija (Indien)',
        'os' => 'Ossetesch',
        'os_GE' => 'Ossetesch (Georgien)',
        'os_RU' => 'Ossetesch (Russland)',
        'pa' => 'Pandschabesch',
        'pa_Arab' => 'Pandschabesch (Arabesch)',
        'pa_Arab_PK' => 'Pandschabesch (Arabesch, Pakistan)',
        'pa_Guru' => 'Pandschabesch (Gurmukhi)',
        'pa_Guru_IN' => 'Pandschabesch (Gurmukhi, Indien)',
        'pa_IN' => 'Pandschabesch (Indien)',
        'pa_PK' => 'Pandschabesch (Pakistan)',
        'pl' => 'Polnesch',
        'pl_PL' => 'Polnesch (Polen)',
        'ps' => 'Paschtu',
        'ps_AF' => 'Paschtu (Afghanistan)',
        'ps_PK' => 'Paschtu (Pakistan)',
        'pt' => 'Portugisesch',
        'pt_AO' => 'Portugisesch (Angola)',
        'pt_BR' => 'Portugisesch (Brasilien)',
        'pt_CH' => 'Portugisesch (Schwäiz)',
        'pt_CV' => 'Portugisesch (Kap Verde)',
        'pt_GQ' => 'Portugisesch (Equatorialguinea)',
        'pt_GW' => 'Portugisesch (Guinea-Bissau)',
        'pt_LU' => 'Portugisesch (Lëtzebuerg)',
        'pt_MO' => 'Portugisesch (Spezialverwaltungszon Macau)',
        'pt_MZ' => 'Portugisesch (Mosambik)',
        'pt_PT' => 'Portugisesch (Portugal)',
        'pt_ST' => 'Portugisesch (São Tomé a Príncipe)',
        'pt_TL' => 'Portugisesch (Osttimor)',
        'qu' => 'Quechua',
        'qu_BO' => 'Quechua (Bolivien)',
        'qu_EC' => 'Quechua (Ecuador)',
        'qu_PE' => 'Quechua (Peru)',
        'rm' => 'Rätoromanesch',
        'rm_CH' => 'Rätoromanesch (Schwäiz)',
        'rn' => 'Rundi-Sprooch',
        'rn_BI' => 'Rundi-Sprooch (Burundi)',
        'ro' => 'Rumänesch',
        'ro_MD' => 'Rumänesch (Moldawien)',
        'ro_RO' => 'Rumänesch (Rumänien)',
        'ru' => 'Russesch',
        'ru_BY' => 'Russesch (Wäissrussland)',
        'ru_KG' => 'Russesch (Kirgisistan)',
        'ru_KZ' => 'Russesch (Kasachstan)',
        'ru_MD' => 'Russesch (Moldawien)',
        'ru_RU' => 'Russesch (Russland)',
        'ru_UA' => 'Russesch (Ukrain)',
        'rw' => 'Ruandesch',
        'rw_RW' => 'Ruandesch (Ruanda)',
        'sa' => 'Sanskrit',
        'sa_IN' => 'Sanskrit (Indien)',
        'sc' => 'Sardesch',
        'sc_IT' => 'Sardesch (Italien)',
        'sd' => 'Sindhi',
        'sd_Arab' => 'Sindhi (Arabesch)',
        'sd_Arab_PK' => 'Sindhi (Arabesch, Pakistan)',
        'sd_Deva' => 'Sindhi (Devanagari)',
        'sd_Deva_IN' => 'Sindhi (Devanagari, Indien)',
        'sd_PK' => 'Sindhi (Pakistan)',
        'se' => 'Nordsamesch',
        'se_FI' => 'Nordsamesch (Finnland)',
        'se_NO' => 'Nordsamesch (Norwegen)',
        'se_SE' => 'Nordsamesch (Schweden)',
        'sg' => 'Sango',
        'sg_CF' => 'Sango (Zentralafrikanesch Republik)',
        'sh' => 'Serbo-Kroatesch',
        'sh_BA' => 'Serbo-Kroatesch (Bosnien an Herzegowina)',
        'si' => 'Singhalesesch',
        'si_LK' => 'Singhalesesch (Sri Lanka)',
        'sk' => 'Slowakesch',
        'sk_SK' => 'Slowakesch (Slowakei)',
        'sl' => 'Slowenesch',
        'sl_SI' => 'Slowenesch (Slowenien)',
        'sn' => 'Shona',
        'sn_ZW' => 'Shona (Simbabwe)',
        'so' => 'Somali',
        'so_DJ' => 'Somali (Dschibuti)',
        'so_ET' => 'Somali (Ethiopien)',
        'so_KE' => 'Somali (Kenia)',
        'so_SO' => 'Somali (Somalia)',
        'sq' => 'Albanesch',
        'sq_AL' => 'Albanesch (Albanien)',
        'sq_MK' => 'Albanesch (Nordmazedonien)',
        'sr' => 'Serbesch',
        'sr_BA' => 'Serbesch (Bosnien an Herzegowina)',
        'sr_Cyrl' => 'Serbesch (Kyrillesch)',
        'sr_Cyrl_BA' => 'Serbesch (Kyrillesch, Bosnien an Herzegowina)',
        'sr_Cyrl_ME' => 'Serbesch (Kyrillesch, Montenegro)',
        'sr_Cyrl_RS' => 'Serbesch (Kyrillesch, Serbien)',
        'sr_Latn' => 'Serbesch (Laténgesch)',
        'sr_Latn_BA' => 'Serbesch (Laténgesch, Bosnien an Herzegowina)',
        'sr_Latn_ME' => 'Serbesch (Laténgesch, Montenegro)',
        'sr_Latn_RS' => 'Serbesch (Laténgesch, Serbien)',
        'sr_ME' => 'Serbesch (Montenegro)',
        'sr_RS' => 'Serbesch (Serbien)',
        'su' => 'Sundanesesch',
        'su_ID' => 'Sundanesesch (Indonesien)',
        'su_Latn' => 'Sundanesesch (Laténgesch)',
        'su_Latn_ID' => 'Sundanesesch (Laténgesch, Indonesien)',
        'sv' => 'Schwedesch',
        'sv_AX' => 'Schwedesch (Ålandinselen)',
        'sv_FI' => 'Schwedesch (Finnland)',
        'sv_SE' => 'Schwedesch (Schweden)',
        'sw' => 'Suaheli',
        'sw_CD' => 'Suaheli (Kongo-Kinshasa)',
        'sw_KE' => 'Suaheli (Kenia)',
        'sw_TZ' => 'Suaheli (Tansania)',
        'sw_UG' => 'Suaheli (Uganda)',
        'ta' => 'Tamilesch',
        'ta_IN' => 'Tamilesch (Indien)',
        'ta_LK' => 'Tamilesch (Sri Lanka)',
        'ta_MY' => 'Tamilesch (Malaysia)',
        'ta_SG' => 'Tamilesch (Singapur)',
        'te' => 'Telugu',
        'te_IN' => 'Telugu (Indien)',
        'tg' => 'Tadschikesch',
        'tg_TJ' => 'Tadschikesch (Tadschikistan)',
        'th' => 'Thailännesch',
        'th_TH' => 'Thailännesch (Thailand)',
        'ti' => 'Tigrinja',
        'ti_ER' => 'Tigrinja (Eritrea)',
        'ti_ET' => 'Tigrinja (Ethiopien)',
        'tk' => 'Turkmenesch',
        'tk_TM' => 'Turkmenesch (Turkmenistan)',
        'tl' => 'Dagalog',
        'tl_PH' => 'Dagalog (Philippinnen)',
        'to' => 'Tongaesch',
        'to_TO' => 'Tongaesch (Tonga)',
        'tr' => 'Tierkesch',
        'tr_CY' => 'Tierkesch (Zypern)',
        'tr_TR' => 'Tierkesch (Tierkei)',
        'tt' => 'Tataresch',
        'tt_RU' => 'Tataresch (Russland)',
        'ug' => 'Uiguresch',
        'ug_CN' => 'Uiguresch (China)',
        'uk' => 'Ukrainesch',
        'uk_UA' => 'Ukrainesch (Ukrain)',
        'ur' => 'Urdu',
        'ur_IN' => 'Urdu (Indien)',
        'ur_PK' => 'Urdu (Pakistan)',
        'uz' => 'Usbekesch',
        'uz_AF' => 'Usbekesch (Afghanistan)',
        'uz_Arab' => 'Usbekesch (Arabesch)',
        'uz_Arab_AF' => 'Usbekesch (Arabesch, Afghanistan)',
        'uz_Cyrl' => 'Usbekesch (Kyrillesch)',
        'uz_Cyrl_UZ' => 'Usbekesch (Kyrillesch, Usbekistan)',
        'uz_Latn' => 'Usbekesch (Laténgesch)',
        'uz_Latn_UZ' => 'Usbekesch (Laténgesch, Usbekistan)',
        'uz_UZ' => 'Usbekesch (Usbekistan)',
        'vi' => 'Vietnamesesch',
        'vi_VN' => 'Vietnamesesch (Vietnam)',
        'wo' => 'Wolof',
        'wo_SN' => 'Wolof (Senegal)',
        'xh' => 'Xhosa',
        'xh_ZA' => 'Xhosa (Südafrika)',
        'yi' => 'Jiddesch',
        'yi_001' => 'Jiddesch (Welt)',
        'yo' => 'Yoruba',
        'yo_BJ' => 'Yoruba (Benin)',
        'yo_NG' => 'Yoruba (Nigeria)',
        'zh' => 'Chinesesch',
        'zh_CN' => 'Chinesesch (China)',
        'zh_HK' => 'Chinesesch (Spezialverwaltungszon Hong Kong)',
        'zh_Hans' => 'Chinesesch (Vereinfacht)',
        'zh_Hans_CN' => 'Chinesesch (Vereinfacht, China)',
        'zh_Hans_HK' => 'Chinesesch (Vereinfacht, Spezialverwaltungszon Hong Kong)',
        'zh_Hans_MO' => 'Chinesesch (Vereinfacht, Spezialverwaltungszon Macau)',
        'zh_Hans_SG' => 'Chinesesch (Vereinfacht, Singapur)',
        'zh_Hant' => 'Chinesesch (Traditionell)',
        'zh_Hant_HK' => 'Chinesesch (Traditionell, Spezialverwaltungszon Hong Kong)',
        'zh_Hant_MO' => 'Chinesesch (Traditionell, Spezialverwaltungszon Macau)',
        'zh_Hant_TW' => 'Chinesesch (Traditionell, Taiwan)',
        'zh_MO' => 'Chinesesch (Spezialverwaltungszon Macau)',
        'zh_SG' => 'Chinesesch (Singapur)',
        'zh_TW' => 'Chinesesch (Taiwan)',
        'zu' => 'Zulu',
        'zu_ZA' => 'Zulu (Südafrika)',
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";