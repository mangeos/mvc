1682618995
waR3U4bTeM%3A8dab1ccec64dc04a454c56ff42072471-7d7148ab68f7eef55dc165eb8f38153c
s:7624:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdkNzE0OGFiNjhmN2VlZjU1ZGMxNjVlYjhmMzgxNTNjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTE6InNlc3Npb24ucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NjA6InZlbmRvci9zeW1mb255L2ZyYW1ld29yay1idW5kbGUvUmVzb3VyY2VzL2NvbmZpZy9zZXNzaW9uLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDQ5NToiPD9waHAKCi8qCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBTeW1mb255IHBhY2thZ2UuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCm5hbWVzcGFjZSBTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3I7Cgp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTZXNzaW9uRmFjdG9yeTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBGb3VuZGF0aW9uXFNlc3Npb25cU3RvcmFnZVxIYW5kbGVyXEFic3RyYWN0U2Vzc2lvbkhhbmRsZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcSGFuZGxlclxJZGVudGl0eU1hcnNoYWxsZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcSGFuZGxlclxNYXJzaGFsbGluZ1Nlc3Npb25IYW5kbGVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTdG9yYWdlXEhhbmRsZXJcTmF0aXZlRmlsZVNlc3Npb25IYW5kbGVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTdG9yYWdlXEhhbmRsZXJcU2Vzc2lvbkhhbmRsZXJGYWN0b3J5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTdG9yYWdlXEhhbmRsZXJcU3RyaWN0U2Vzc2lvbkhhbmRsZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcTWV0YWRhdGFCYWc7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcTW9ja0ZpbGVTZXNzaW9uU3RvcmFnZUZhY3Rvcnk7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwRm91bmRhdGlvblxTZXNzaW9uXFN0b3JhZ2VcTmF0aXZlU2Vzc2lvblN0b3JhZ2VGYWN0b3J5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cU2Vzc2lvblxTdG9yYWdlXFBocEJyaWRnZVNlc3Npb25TdG9yYWdlRmFjdG9yeTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBLZXJuZWxcRXZlbnRMaXN0ZW5lclxTZXNzaW9uTGlzdGVuZXI7CgpyZXR1cm4gc3RhdGljIGZ1bmN0aW9uIChDb250YWluZXJDb25maWd1cmF0b3IgJGNvbnRhaW5lcikgewogICAgJGNvbnRhaW5lci0+cGFyYW1ldGVycygpLT5zZXQoJ3Nlc3Npb24ubWV0YWRhdGEuc3RvcmFnZV9rZXknLCAnX3NmMl9tZXRhJyk7CgogICAgJGNvbnRhaW5lci0+c2VydmljZXMoKQogICAgICAgIC0+c2V0KCdzZXNzaW9uLmZhY3RvcnknLCBTZXNzaW9uRmFjdG9yeTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdyZXF1ZXN0X3N0YWNrJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZXNzaW9uLnN0b3JhZ2UuZmFjdG9yeScpLAogICAgICAgICAgICAgICAgW3NlcnZpY2UoJ3Nlc3Npb25fbGlzdGVuZXInKSwgJ29uU2Vzc2lvblVzYWdlJ10sCiAgICAgICAgICAgIF0pCgogICAgICAgIC0+c2V0KCdzZXNzaW9uLnN0b3JhZ2UuZmFjdG9yeS5uYXRpdmUnLCBOYXRpdmVTZXNzaW9uU3RvcmFnZUZhY3Rvcnk6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgcGFyYW0oJ3Nlc3Npb24uc3RvcmFnZS5vcHRpb25zJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZXNzaW9uLmhhbmRsZXInKSwKICAgICAgICAgICAgICAgIGlubGluZV9zZXJ2aWNlKE1ldGFkYXRhQmFnOjpjbGFzcykKICAgICAgICAgICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS5zdG9yYWdlX2tleScpLAogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS51cGRhdGVfdGhyZXNob2xkJyksCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBmYWxzZSwKICAgICAgICAgICAgXSkKICAgICAgICAtPnNldCgnc2Vzc2lvbi5zdG9yYWdlLmZhY3RvcnkucGhwX2JyaWRnZScsIFBocEJyaWRnZVNlc3Npb25TdG9yYWdlRmFjdG9yeTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZXNzaW9uLmhhbmRsZXInKSwKICAgICAgICAgICAgICAgIGlubGluZV9zZXJ2aWNlKE1ldGFkYXRhQmFnOjpjbGFzcykKICAgICAgICAgICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS5zdG9yYWdlX2tleScpLAogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS51cGRhdGVfdGhyZXNob2xkJyksCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBmYWxzZSwKICAgICAgICAgICAgXSkKICAgICAgICAtPnNldCgnc2Vzc2lvbi5zdG9yYWdlLmZhY3RvcnkubW9ja19maWxlJywgTW9ja0ZpbGVTZXNzaW9uU3RvcmFnZUZhY3Rvcnk6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5jYWNoZV9kaXInKS4nL3Nlc3Npb25zJywKICAgICAgICAgICAgICAgICdNT0NLU0VTU0lEJywKICAgICAgICAgICAgICAgIGlubGluZV9zZXJ2aWNlKE1ldGFkYXRhQmFnOjpjbGFzcykKICAgICAgICAgICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS5zdG9yYWdlX2tleScpLAogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5tZXRhZGF0YS51cGRhdGVfdGhyZXNob2xkJyksCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pCgogICAgICAgIC0+YWxpYXMoXFNlc3Npb25IYW5kbGVySW50ZXJmYWNlOjpjbGFzcywgJ3Nlc3Npb24uaGFuZGxlcicpCgogICAgICAgIC0+c2V0KCdzZXNzaW9uLmhhbmRsZXIubmF0aXZlX2ZpbGUnLCBTdHJpY3RTZXNzaW9uSGFuZGxlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBpbmxpbmVfc2VydmljZShOYXRpdmVGaWxlU2Vzc2lvbkhhbmRsZXI6OmNsYXNzKQogICAgICAgICAgICAgICAgICAgIC0+YXJncyhbcGFyYW0oJ3Nlc3Npb24uc2F2ZV9wYXRoJyldKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24uYWJzdHJhY3RfaGFuZGxlcicsIEFic3RyYWN0U2Vzc2lvbkhhbmRsZXI6OmNsYXNzKQogICAgICAgICAgICAtPmZhY3RvcnkoW1Nlc3Npb25IYW5kbGVyRmFjdG9yeTo6Y2xhc3MsICdjcmVhdGVIYW5kbGVyJ10pCiAgICAgICAgICAgIC0+YXJncyhbYWJzdHJhY3RfYXJnKCdBIHN0cmluZyBvciBhIGNvbm5lY3Rpb24gb2JqZWN0JyldKQoKICAgICAgICAtPnNldCgnc2Vzc2lvbl9saXN0ZW5lcicsIFNlc3Npb25MaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlX2xvY2F0b3IoWwogICAgICAgICAgICAgICAgICAgICdzZXNzaW9uX2ZhY3RvcnknID0+IHNlcnZpY2UoJ3Nlc3Npb24uZmFjdG9yeScpLT5pZ25vcmVPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgICAgICAnbG9nZ2VyJyA9PiBzZXJ2aWNlKCdsb2dnZXInKS0+aWdub3JlT25JbnZhbGlkKCksCiAgICAgICAgICAgICAgICAgICAgJ3Nlc3Npb25fY29sbGVjdG9yJyA9PiBzZXJ2aWNlKCdkYXRhX2NvbGxlY3Rvci5yZXF1ZXN0LnNlc3Npb25fY29sbGVjdG9yJyktPmlnbm9yZU9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBwYXJhbSgna2VybmVsLmRlYnVnJyksCiAgICAgICAgICAgICAgICBwYXJhbSgnc2Vzc2lvbi5zdG9yYWdlLm9wdGlvbnMnKSwKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLT50YWcoJ2tlcm5lbC5ldmVudF9zdWJzY3JpYmVyJykKICAgICAgICAgICAgLT50YWcoJ2tlcm5lbC5yZXNldCcsIFsnbWV0aG9kJyA9PiAncmVzZXQnXSkKCiAgICAgICAgLT5zZXQoJ3Nlc3Npb24ubWFyc2hhbGxlcicsIElkZW50aXR5TWFyc2hhbGxlcjo6Y2xhc3MpCgogICAgICAgIC0+c2V0KCdzZXNzaW9uLm1hcnNoYWxsaW5nX2hhbmRsZXInLCBNYXJzaGFsbGluZ1Nlc3Npb25IYW5kbGVyOjpjbGFzcykKICAgICAgICAgICAgLT5kZWNvcmF0ZSgnc2Vzc2lvbi5oYW5kbGVyJykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3Nlc3Npb24ubWFyc2hhbGxpbmdfaGFuZGxlci5pbm5lcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnc2Vzc2lvbi5tYXJzaGFsbGVyJyksCiAgICAgICAgICAgIF0pCiAgICA7Cn07CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NTg6IlxTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3IiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1ODoiXFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJDb25maWd1cmF0b3IiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";